version: "3"

x-common-variables: &common-variables
  DB_USER: root
  DB_PASS: root
  DB_NAME: shareplacevolution

services:
  mysql:
    image: mysql:5.7
    environment:
      <<: *common-variables
      MYSQL_HOST: localhost
      MYSQL_ROOT_PASSWORD: root
      LANG: C.UTF-8 ## Because despite the fact the DB is correctly set,
                    ## it is not done by default inside the container :
                    ## during the insertion of the initial datas from sample.sql, for exemple,
                    ## all the letters with accents are changed 
    ports:
      - 3307:3306 ## 3307 is only because I already have a MySQL instance running on my machine and using port 3306
    restart: unless-stopped
    volumes:
      - ./db/sample.sql:/docker-entrypoint-initdb.d/sample.sql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --character-set-client-handshake=FALSE

## Part to remove if you don't want phpMyAdmin
  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
    links:
      - mysql:mysql
    ports:
      - 8080:80
    restart: always
## End of part to remove

  server:
    build: ./server
    depends_on:
      - mysql
    expose:
      - 3000
    environment:
      <<: *common-variables
      DB_HOST: mysql
      DB_TOK: sptoken
    ports:
      - 3000:3000
    volumes:
      - ./server:/app
      - /app/node_modules
    links:
      - mysql
    command: bash -c 'while !</dev/tcp/mysql/3306; do sleep 1; done; npm start' ## Because we have to wait for the DB to be ready before starting
                                                                                ## this container : if not the server will get ERR_CONNECTION_REFUSED,
                                                                                ## then it will stop, and we'll have to start it again manually.
                                                                                ## In order to do that, we need first to install a bash inside the container :
                                                                                ## see the Dockerfile in server's folder (RUN apk update && apk add bash)
  client:
    build: ./client    
    ports:
      - 4200:80
    volumes:
      - ./client/src:/app/src
    links:
      - server


    